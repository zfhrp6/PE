# -*- coding: utf-8 -*-
#project euler problem 92
#各桁の2乗を足し合わせて新たな数を作ることを、同じ数が現れるまで繰り返す。
#例えば
#
#　　44 → 32 → 13 → 10 → 1 → 1
#　　85 → 89 → 145 → 42 → 20 → 4 → 16 → 37 → 58 → 89
#
#のような列である。どちらも1か89で無限ループに陥っている。
#驚くことに、どの数から始めても最終的に1か89に到達する。
#
#では、10,000,000より小さい数で89に到達する数はいくつあるか。
#---------------------------------------------------------------------------

import time
time1=time.time()
cou=0
for i in range(1,10000000):
    k=0
    st=str(i)
    for n in range(0,len(st)):
        k+=int(st[n])**2
    while (k!=89):
        k=(k%10)**2+((k%100)/10)**2+(k/100)**2
        if k==1:
            break
    if k==89 :
        cou+=1
print cou
print time.time()-time1, "seconds"
del(cou,i,k,n,time1)